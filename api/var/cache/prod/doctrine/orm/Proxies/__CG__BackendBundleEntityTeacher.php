<?php

namespace Proxies\__CG__\BackendBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Teacher extends \BackendBundle\Entity\Teacher implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'id', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'curp', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'rfc', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'fullname', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'createTime', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'updateTime', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'user', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'educationLevel', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'speciality', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'teacherFunction', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'imageXxiFile', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'didFinishXxiQuestionary', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'evaluationIneeFinish', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'evaluationIneeImage'];
        }

        return ['__isInitialized__', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'id', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'curp', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'rfc', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'fullname', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'createTime', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'updateTime', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'user', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'educationLevel', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'speciality', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'teacherFunction', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'imageXxiFile', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'didFinishXxiQuestionary', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'evaluationIneeFinish', '' . "\0" . 'BackendBundle\\Entity\\Teacher' . "\0" . 'evaluationIneeImage'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Teacher $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurp($curp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurp', [$curp]);

        return parent::setCurp($curp);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurp', []);

        return parent::getCurp();
    }

    /**
     * {@inheritDoc}
     */
    public function setRfc($rfc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRfc', [$rfc]);

        return parent::setRfc($rfc);
    }

    /**
     * {@inheritDoc}
     */
    public function getRfc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRfc', []);

        return parent::getRfc();
    }

    /**
     * {@inheritDoc}
     */
    public function setFullname($fullname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFullname', [$fullname]);

        return parent::setFullname($fullname);
    }

    /**
     * {@inheritDoc}
     */
    public function getFullname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullname', []);

        return parent::getFullname();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreateTime($createTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreateTime', [$createTime]);

        return parent::setCreateTime($createTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreateTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreateTime', []);

        return parent::getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateTime($updateTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateTime', [$updateTime]);

        return parent::setUpdateTime($updateTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateTime', []);

        return parent::getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\BackendBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setEducationLevel(\BackendBundle\Entity\EducationLevel $educationLevel = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEducationLevel', [$educationLevel]);

        return parent::setEducationLevel($educationLevel);
    }

    /**
     * {@inheritDoc}
     */
    public function getEducationLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEducationLevel', []);

        return parent::getEducationLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpeciality(\BackendBundle\Entity\Speciality $speciality = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpeciality', [$speciality]);

        return parent::setSpeciality($speciality);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpeciality()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpeciality', []);

        return parent::getSpeciality();
    }

    /**
     * {@inheritDoc}
     */
    public function setTeacherFunction(\BackendBundle\Entity\TeacherFunction $teacherFunction = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTeacherFunction', [$teacherFunction]);

        return parent::setTeacherFunction($teacherFunction);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeacherFunction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeacherFunction', []);

        return parent::getTeacherFunction();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageXxiFile($imageXxiFile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageXxiFile', [$imageXxiFile]);

        return parent::setImageXxiFile($imageXxiFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageXxiFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageXxiFile', []);

        return parent::getImageXxiFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setDidFinishXxiQuestionary($didFinishXxiQuestionary)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDidFinishXxiQuestionary', [$didFinishXxiQuestionary]);

        return parent::setDidFinishXxiQuestionary($didFinishXxiQuestionary);
    }

    /**
     * {@inheritDoc}
     */
    public function getDidFinishXxiQuestionary()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDidFinishXxiQuestionary', []);

        return parent::getDidFinishXxiQuestionary();
    }

    /**
     * {@inheritDoc}
     */
    public function setEvaluationIneeFinish($evaluationIneeFinish)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEvaluationIneeFinish', [$evaluationIneeFinish]);

        return parent::setEvaluationIneeFinish($evaluationIneeFinish);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvaluationIneeFinish()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvaluationIneeFinish', []);

        return parent::getEvaluationIneeFinish();
    }

    /**
     * {@inheritDoc}
     */
    public function setEvaluationIneeImage($evaluationIneeImage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEvaluationIneeImage', [$evaluationIneeImage]);

        return parent::setEvaluationIneeImage($evaluationIneeImage);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvaluationIneeImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvaluationIneeImage', []);

        return parent::getEvaluationIneeImage();
    }

}
